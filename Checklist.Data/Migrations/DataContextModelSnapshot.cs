// <auto-generated />
using Checklist.Data.Entities;
using Checklist.WebApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace Checklist.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Checklist.Data.Entities.Answer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Created");

                    b.Property<int>("QuesionId");

                    b.Property<int>("ResultId");

                    b.Property<string>("UserAnswer");

                    b.HasKey("Id");

                    b.HasIndex("QuesionId");

                    b.HasIndex("ResultId");

                    b.ToTable("Answers");
                });

            modelBuilder.Entity("Checklist.Data.Entities.CheckList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedOn");

                    b.Property<string>("HubName");

                    b.Property<bool>("IsActive");

                    b.Property<int?>("SubAdminId");

                    b.HasKey("Id");

                    b.HasIndex("SubAdminId");

                    b.ToTable("CheckLists");
                });

            modelBuilder.Entity("Checklist.Data.Entities.Heading", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("CheckListId");

                    b.Property<string>("Content");

                    b.Property<int>("HeadingType");

                    b.HasKey("Id");

                    b.HasIndex("CheckListId");

                    b.ToTable("Headings");
                });

            modelBuilder.Entity("Checklist.Data.Entities.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("CheckListId");

                    b.Property<string>("Content");

                    b.Property<DateTime>("CreatedOn");

                    b.Property<string>("FooterText");

                    b.Property<string>("HeaderText");

                    b.Property<int?>("MainHeadingId");

                    b.Property<string>("Option1");

                    b.Property<string>("Option2");

                    b.Property<string>("Option3");

                    b.Property<string>("Option4");

                    b.Property<string>("Option5");

                    b.Property<string>("Option6");

                    b.Property<int?>("SubHeadingId");

                    b.Property<int?>("SubOfSubHeadingId");

                    b.HasKey("Id");

                    b.HasIndex("CheckListId");

                    b.HasIndex("MainHeadingId");

                    b.HasIndex("SubHeadingId");

                    b.HasIndex("SubOfSubHeadingId");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("Checklist.Data.Entities.Result", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CheckListId");

                    b.Property<string>("CompanyName");

                    b.Property<int>("EmployementType");

                    b.Property<string>("HRMS");

                    b.Property<string>("Name");

                    b.Property<string>("Remarks");

                    b.Property<string>("SignatureBase64");

                    b.Property<DateTime>("SubmitOn");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("CheckListId");

                    b.HasIndex("UserId");

                    b.ToTable("Results");
                });

            modelBuilder.Entity("Checklist.Data.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<byte[]>("PasswordHash");

                    b.Property<byte[]>("PasswordSalt");

                    b.Property<int>("Role");

                    b.Property<int?>("UserSubAdminId");

                    b.Property<string>("Username")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("UserSubAdminId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Checklist.Data.Entities.Answer", b =>
                {
                    b.HasOne("Checklist.Data.Entities.Question", "Question")
                        .WithMany()
                        .HasForeignKey("QuesionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Checklist.Data.Entities.Result", "Result")
                        .WithMany()
                        .HasForeignKey("ResultId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Checklist.Data.Entities.CheckList", b =>
                {
                    b.HasOne("Checklist.Data.Entities.User", "Users")
                        .WithMany()
                        .HasForeignKey("SubAdminId");
                });

            modelBuilder.Entity("Checklist.Data.Entities.Heading", b =>
                {
                    b.HasOne("Checklist.Data.Entities.CheckList", "CheckList")
                        .WithMany()
                        .HasForeignKey("CheckListId");
                });

            modelBuilder.Entity("Checklist.Data.Entities.Question", b =>
                {
                    b.HasOne("Checklist.Data.Entities.CheckList", "CheckList")
                        .WithMany()
                        .HasForeignKey("CheckListId");

                    b.HasOne("Checklist.Data.Entities.Heading", "Heading")
                        .WithMany()
                        .HasForeignKey("MainHeadingId");

                    b.HasOne("Checklist.Data.Entities.Heading", "SubHeading")
                        .WithMany()
                        .HasForeignKey("SubHeadingId");

                    b.HasOne("Checklist.Data.Entities.Heading", "SubOfSubHeading")
                        .WithMany()
                        .HasForeignKey("SubOfSubHeadingId");
                });

            modelBuilder.Entity("Checklist.Data.Entities.Result", b =>
                {
                    b.HasOne("Checklist.Data.Entities.CheckList", "CheckList")
                        .WithMany()
                        .HasForeignKey("CheckListId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Checklist.Data.Entities.User", "Users")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Checklist.Data.Entities.User", b =>
                {
                    b.HasOne("Checklist.Data.Entities.User", "Users")
                        .WithMany()
                        .HasForeignKey("UserSubAdminId");
                });
#pragma warning restore 612, 618
        }
    }
}
